

Microchip Technology PIC18 PRO Macro Assembler V1.43 build -156212558 
                                                                                               Thu Sep 28 11:24:42 2017

Microchip Technology Omniscient Code Generator v1.43 (PRO mode) build 201707250354
     1                           	processor	18F1220
     2                           	fnconf	rparam,??,?,0
     3                           	opt	pw 120
     4                           	opt	pm
     5                           	psect	nvCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
     6                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     7                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
     8                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
     9                           	psect	text0,global,reloc=2,class=CODE,delta=1
    10                           	psect	text1,global,reloc=2,class=CODE,delta=1
    11                           	psect	text2,global,reloc=2,class=CODE,delta=1
    12                           	psect	text3,global,reloc=2,class=CODE,delta=1
    13                           	psect	text4,global,reloc=2,class=CODE,delta=1
    14                           	psect	text5,global,reloc=2,class=CODE,delta=1
    15                           	psect	text6,global,reloc=2,class=CODE,delta=1
    16                           	psect	text7,global,reloc=2,class=CODE,delta=1
    17                           	psect	text8,global,reloc=2,class=CODE,delta=1
    18                           	psect	text9,global,reloc=2,class=CODE,delta=1
    19                           	psect	text10,global,reloc=2,class=CODE,delta=1
    20                           	psect	text11,global,reloc=2,class=CODE,delta=1
    21                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    22                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    23  0000                     
    24                           ; Version 1.43
    25                           ; Generated 25/07/2017 GMT
    26                           ; 
    27                           ; Copyright Â© 2017, Microchip Technology Inc. and its subsidiaries ("Microchip")
    28                           ; All rights reserved.
    29                           ; 
    30                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    31                           ; 
    32                           ; Redistribution and use in source and binary forms, with or without modification, are
    33                           ; permitted provided that the following conditions are met:
    34                           ; 
    35                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    36                           ;        conditions and the following disclaimer.
    37                           ; 
    38                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    39                           ;        of conditions and the following disclaimer in the documentation and/or other
    40                           ;        materials provided with the distribution.
    41                           ; 
    42                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    43                           ;        software without specific prior written permission.
    44                           ; 
    45                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    46                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    47                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    48                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    49                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    50                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    51                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    52                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    53                           ; 
    54                           ; 
    55                           ; Code-generator required, PIC18F1220 Definitions
    56                           ; 
    57                           ; SFR Addresses
    58  0000                     
    59                           	psect	nvCOMRAM
    60  000007                     __pnvCOMRAM:
    61                           	opt stack 0
    62  000007                     SendCommand@cmd_addr:
    63                           	opt stack 0
    64  000007                     	ds	2
    65  000009                     _command:
    66                           	opt stack 0
    67  000009                     	ds	1
    68  0000                     _PORTBbits	set	3969
    69  0000                     _PORTAbits	set	3968
    70  0000                     _TRISB	set	3987
    71  0000                     _PORTB	set	3969
    72  0000                     _TRISA	set	3986
    73  0000                     _PORTA	set	3968
    74  0000                     _ADCON1	set	4033
    75                           
    76                           ; #config settings
    77  0000                     
    78                           	psect	cinit
    79  000F2E                     __pcinit:
    80                           	opt stack 0
    81  000F2E                     start_initialization:
    82                           	opt stack 0
    83  000F2E                     __initialization:
    84                           	opt stack 0
    85                           
    86                           ; Clear objects allocated to COMRAM (6 bytes)
    87  000F2E  6A06               	clrf	(__pbssCOMRAM+5)& (0+255),c
    88  000F30  6A05               	clrf	(__pbssCOMRAM+4)& (0+255),c
    89  000F32  6A04               	clrf	(__pbssCOMRAM+3)& (0+255),c
    90  000F34  6A03               	clrf	(__pbssCOMRAM+2)& (0+255),c
    91  000F36  6A02               	clrf	(__pbssCOMRAM+1)& (0+255),c
    92  000F38  6A01               	clrf	__pbssCOMRAM& (0+255),c
    93  000F3A                     end_of_initialization:
    94                           	opt stack 0
    95  000F3A                     __end_of__initialization:
    96                           	opt stack 0
    97  000F3A  0100               	movlb	0
    98  000F3C  EFCC  F007         	goto	_main	;jump to C main() function
    99                           
   100                           	psect	bssCOMRAM
   101  000001                     __pbssCOMRAM:
   102                           	opt stack 0
   103  000001                     SendCommand@temp:
   104                           	opt stack 0
   105  000001                     	ds	2
   106  000003                     _address:
   107                           	opt stack 0
   108  000003                     	ds	2
   109  000005                     SendCommand@i:
   110                           	opt stack 0
   111  000005                     	ds	1
   112  000006                     _buffer:
   113                           	opt stack 0
   114  000006                     	ds	1
   115                           
   116                           	psect	cstackCOMRAM
   117  00000A                     __pcstackCOMRAM:
   118                           	opt stack 0
   119  00000A                     ??_SendCommand:
   120  00000A                     byteout@i:
   121                           	opt stack 0
   122  00000A                     bytein@i:
   123                           	opt stack 0
   124                           
   125                           ; 1 bytes @ 0x0
   126  00000A                     	ds	2
   127  00000C                     WriteX8@data:
   128                           	opt stack 0
   129                           
   130                           ; 1 bytes @ 0x2
   131  00000C                     	ds	1
   132  00000D                     
   133                           ; 1 bytes @ 0x3
   134 ;;
   135 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
   136 ;;
   137 ;; *************** function _main *****************
   138 ;; Defined at:
   139 ;;		line 139 in file "AN1004.c"
   140 ;; Parameters:    Size  Location     Type
   141 ;;		None
   142 ;; Auto vars:     Size  Location     Type
   143 ;;  data            2    0        unsigned int 
   144 ;; Return value:  Size  Location     Type
   145 ;;                  1    wreg      void 
   146 ;; Registers used:
   147 ;;		wreg, status,2, status,0, cstack
   148 ;; Tracked objects:
   149 ;;		On entry : 0/0
   150 ;;		On exit  : 0/0
   151 ;;		Unchanged: 0/0
   152 ;; Data sizes:     COMRAM   BANK0
   153 ;;      Params:         0       0
   154 ;;      Locals:         2       0
   155 ;;      Temps:          0       0
   156 ;;      Totals:         2       0
   157 ;;Total ram usage:        2 bytes
   158 ;; Hardware stack levels required when called:    3
   159 ;; This function calls:
   160 ;;		_Ewds
   161 ;;		_Ewen
   162 ;;		_ReadX8
   163 ;;		_WriteX8
   164 ;;		_init
   165 ;; This function is called by:
   166 ;;		Startup code after reset
   167 ;; This function uses a non-reentrant model
   168 ;;
   169                           
   170                           	psect	text0
   171  000F98                     __ptext0:
   172                           	opt stack 0
   173  000F98                     _main:
   174                           	opt stack 28
   175                           
   176                           ;AN1004.c: 142: unsigned int data;
   177                           ;AN1004.c: 144: init();
   178                           
   179                           ;incstack = 0
   180  000F98  EC8E  F007         	call	_init	;wreg free
   181                           
   182                           ;AN1004.c: 146: Ewen();
   183  000F9C  EC85  F007         	call	_Ewen	;wreg free
   184                           
   185                           ;AN1004.c: 150: address = 0x10;
   186  000FA0  6A04               	clrf	_address+1,c
   187  000FA2  0E10               	movlw	16
   188  000FA4  6E03               	movwf	_address,c
   189                           
   190                           ;AN1004.c: 151: WriteX8(data);
   191  000FA6  0E55               	movlw	85
   192  000FA8  ECBF  F007         	call	_WriteX8
   193  000FAC  ECA0  F007         	call	_ReadX8	;wreg free
   194                           
   195                           ;AN1004.c: 161: Ewds();
   196  000FB0  EC7C  F007         	call	_Ewds	;wreg free
   197  000FB4                     l45:
   198  000FB4  D7FF               	goto	l45
   199  000FB6                     __end_of_main:
   200                           	opt stack 0
   201                           
   202 ;; *************** function _init *****************
   203 ;; Defined at:
   204 ;;		line 172 in file "AN1004.c"
   205 ;; Parameters:    Size  Location     Type
   206 ;;		None
   207 ;; Auto vars:     Size  Location     Type
   208 ;;		None
   209 ;; Return value:  Size  Location     Type
   210 ;;                  1    wreg      void 
   211 ;; Registers used:
   212 ;;		wreg, status,2
   213 ;; Tracked objects:
   214 ;;		On entry : 0/0
   215 ;;		On exit  : 0/0
   216 ;;		Unchanged: 0/0
   217 ;; Data sizes:     COMRAM   BANK0
   218 ;;      Params:         0       0
   219 ;;      Locals:         0       0
   220 ;;      Temps:          0       0
   221 ;;      Totals:         0       0
   222 ;;Total ram usage:        0 bytes
   223 ;; Hardware stack levels used:    1
   224 ;; This function calls:
   225 ;;		Nothing
   226 ;; This function is called by:
   227 ;;		_main
   228 ;; This function uses a non-reentrant model
   229 ;;
   230                           
   231                           	psect	text1
   232  000F1C                     __ptext1:
   233                           	opt stack 0
   234  000F1C                     _init:
   235                           	opt stack 30
   236                           
   237                           ;AN1004.c: 174: ADCON1 = 0x7F;
   238                           
   239                           ;incstack = 0
   240  000F1C  0E7F               	movlw	127
   241  000F1E  6EC1               	movwf	4033,c	;volatile
   242                           
   243                           ;AN1004.c: 175: PORTA = 0;
   244  000F20  6A80               	clrf	3968,c	;volatile
   245                           
   246                           ;AN1004.c: 176: TRISA = 0b11110111;
   247  000F22  0EF7               	movlw	247
   248  000F24  6E92               	movwf	3986,c	;volatile
   249                           
   250                           ;AN1004.c: 177: PORTB = 0;
   251  000F26  6A81               	clrf	3969,c	;volatile
   252                           
   253                           ;AN1004.c: 178: TRISB = 0b11111100;
   254  000F28  0EFC               	movlw	252
   255  000F2A  6E93               	movwf	3987,c	;volatile
   256  000F2C  0CFC               	retlw	252	;funcret
   257  000F2E                     __end_of_init:
   258                           	opt stack 0
   259                           
   260 ;; *************** function _WriteX8 *****************
   261 ;; Defined at:
   262 ;;		line 206 in file "AN1004.c"
   263 ;; Parameters:    Size  Location     Type
   264 ;;  data            1    wreg     unsigned char 
   265 ;; Auto vars:     Size  Location     Type
   266 ;;  data            1    2[COMRAM] unsigned char 
   267 ;; Return value:  Size  Location     Type
   268 ;;                  1    wreg      void 
   269 ;; Registers used:
   270 ;;		wreg, status,2, status,0, cstack
   271 ;; Tracked objects:
   272 ;;		On entry : 0/0
   273 ;;		On exit  : 0/0
   274 ;;		Unchanged: 0/0
   275 ;; Data sizes:     COMRAM   BANK0
   276 ;;      Params:         0       0
   277 ;;      Locals:         1       0
   278 ;;      Temps:          0       0
   279 ;;      Totals:         1       0
   280 ;;Total ram usage:        1 bytes
   281 ;; Hardware stack levels used:    1
   282 ;; Hardware stack levels required when called:    2
   283 ;; This function calls:
   284 ;;		_SendCommand
   285 ;;		_byteout
   286 ;;		_poll
   287 ;; This function is called by:
   288 ;;		_main
   289 ;; This function uses a non-reentrant model
   290 ;;
   291                           
   292                           	psect	text2
   293  000F7E                     __ptext2:
   294                           	opt stack 0
   295  000F7E                     _WriteX8:
   296                           	opt stack 28
   297                           
   298                           ;incstack = 0
   299                           ;WriteX8@data stored from wreg
   300  000F7E  6E0C               	movwf	WriteX8@data,c
   301                           
   302                           ;AN1004.c: 208: command = 0b10100000;
   303  000F80  0EA0               	movlw	160
   304  000F82  6E09               	movwf	_command,c
   305                           
   306                           ;AN1004.c: 209: PORTAbits.RA3 = 1;
   307  000F84  8680               	bsf	3968,3,c	;volatile
   308                           
   309                           ;AN1004.c: 210: SendCommand();
   310  000F86  ECDB  F007         	call	_SendCommand	;wreg free
   311                           
   312                           ;AN1004.c: 211: buffer = data;
   313  000F8A  C00C  F006         	movff	WriteX8@data,_buffer
   314                           
   315                           ;AN1004.c: 212: byteout();
   316  000F8E  ECAA  F007         	call	_byteout	;wreg free
   317                           
   318                           ;AN1004.c: 213: PORTAbits.RA3 = 0;
   319  000F92  9680               	bcf	3968,3,c	;volatile
   320                           
   321                           ;AN1004.c: 215: poll();
   322  000F94  EF66  F007         	goto	_poll	;wreg free
   323  000F98                     __end_of_WriteX8:
   324                           	opt stack 0
   325                           
   326 ;; *************** function _poll *****************
   327 ;; Defined at:
   328 ;;		line 305 in file "AN1004.c"
   329 ;; Parameters:    Size  Location     Type
   330 ;;		None
   331 ;; Auto vars:     Size  Location     Type
   332 ;;		None
   333 ;; Return value:  Size  Location     Type
   334 ;;                  1    wreg      void 
   335 ;; Registers used:
   336 ;;		None
   337 ;; Tracked objects:
   338 ;;		On entry : 0/0
   339 ;;		On exit  : 0/0
   340 ;;		Unchanged: 0/0
   341 ;; Data sizes:     COMRAM   BANK0
   342 ;;      Params:         0       0
   343 ;;      Locals:         0       0
   344 ;;      Temps:          0       0
   345 ;;      Totals:         0       0
   346 ;;Total ram usage:        0 bytes
   347 ;; Hardware stack levels used:    1
   348 ;; This function calls:
   349 ;;		Nothing
   350 ;; This function is called by:
   351 ;;		_WriteX8
   352 ;; This function uses a non-reentrant model
   353 ;;
   354                           
   355                           	psect	text3
   356  000ECC                     __ptext3:
   357                           	opt stack 0
   358  000ECC                     _poll:
   359                           	opt stack 29
   360                           
   361                           ;AN1004.c: 307: PORTAbits.RA3 = 1;
   362                           
   363                           ;incstack = 0
   364  000ECC  8680               	bsf	3968,3,c	;volatile
   365                           
   366                           ;AN1004.c: 308: __nop();
   367  000ECE  F000               	nop	
   368  000ED0                     l72:
   369  000ED0  A881               	btfss	3969,4,c	;volatile
   370  000ED2  D7FE               	goto	l72
   371                           
   372                           ;AN1004.c: 310: PORTAbits.RA3 = 0;
   373  000ED4  9680               	bcf	3968,3,c	;volatile
   374  000ED6  0012               	return		;funcret
   375  000ED8                     __end_of_poll:
   376                           	opt stack 0
   377                           
   378 ;; *************** function _byteout *****************
   379 ;; Defined at:
   380 ;;		line 358 in file "AN1004.c"
   381 ;; Parameters:    Size  Location     Type
   382 ;;		None
   383 ;; Auto vars:     Size  Location     Type
   384 ;;  i               1    0[COMRAM] unsigned char 
   385 ;; Return value:  Size  Location     Type
   386 ;;                  1    wreg      void 
   387 ;; Registers used:
   388 ;;		wreg, status,2, status,0, cstack
   389 ;; Tracked objects:
   390 ;;		On entry : 0/0
   391 ;;		On exit  : 0/0
   392 ;;		Unchanged: 0/0
   393 ;; Data sizes:     COMRAM   BANK0
   394 ;;      Params:         0       0
   395 ;;      Locals:         1       0
   396 ;;      Temps:          0       0
   397 ;;      Totals:         1       0
   398 ;;Total ram usage:        1 bytes
   399 ;; Hardware stack levels used:    1
   400 ;; Hardware stack levels required when called:    1
   401 ;; This function calls:
   402 ;;		_bitout
   403 ;; This function is called by:
   404 ;;		_WriteX8
   405 ;; This function uses a non-reentrant model
   406 ;;
   407                           
   408                           	psect	text4
   409  000F54                     __ptext4:
   410                           	opt stack 0
   411  000F54                     _byteout:
   412                           	opt stack 28
   413                           
   414                           ;AN1004.c: 360: unsigned char i;
   415                           ;AN1004.c: 362: for (i = 0; i < 8; i++)
   416                           
   417                           ;incstack = 0
   418  000F54  6A0A               	clrf	byteout@i,c
   419  000F56                     l777:
   420                           
   421                           ;AN1004.c: 363: {
   422                           ;AN1004.c: 364: bitout();
   423  000F56  EC73  F007         	call	_bitout	;wreg free
   424                           
   425                           ;AN1004.c: 365: buffer = buffer << 1;
   426  000F5A  90D8               	bcf	status,0,c
   427  000F5C  3606               	rlcf	_buffer,f,c
   428  000F5E  2A0A               	incf	byteout@i,f,c
   429  000F60  0E07               	movlw	7
   430  000F62  640A               	cpfsgt	byteout@i,c
   431  000F64  D7F8               	goto	l777
   432  000F66  0C07               	retlw	7
   433  000F68                     __end_of_byteout:
   434                           	opt stack 0
   435                           status	equ	0xFD8
   436                           
   437 ;; *************** function _ReadX8 *****************
   438 ;; Defined at:
   439 ;;		line 246 in file "AN1004.c"
   440 ;; Parameters:    Size  Location     Type
   441 ;;		None
   442 ;; Auto vars:     Size  Location     Type
   443 ;;		None
   444 ;; Return value:  Size  Location     Type
   445 ;;                  1    wreg      unsigned char 
   446 ;; Registers used:
   447 ;;		wreg, status,2, status,0, cstack
   448 ;; Tracked objects:
   449 ;;		On entry : 0/0
   450 ;;		On exit  : 0/0
   451 ;;		Unchanged: 0/0
   452 ;; Data sizes:     COMRAM   BANK0
   453 ;;      Params:         0       0
   454 ;;      Locals:         0       0
   455 ;;      Temps:          0       0
   456 ;;      Totals:         0       0
   457 ;;Total ram usage:        0 bytes
   458 ;; Hardware stack levels used:    1
   459 ;; Hardware stack levels required when called:    2
   460 ;; This function calls:
   461 ;;		_SendCommand
   462 ;;		_bytein
   463 ;; This function is called by:
   464 ;;		_main
   465 ;; This function uses a non-reentrant model
   466 ;;
   467                           
   468                           	psect	text5
   469  000F40                     __ptext5:
   470                           	opt stack 0
   471  000F40                     _ReadX8:
   472                           	opt stack 28
   473                           
   474                           ;AN1004.c: 248: command = 0b11000000;
   475                           
   476                           ;incstack = 0
   477  000F40  0EC0               	movlw	192
   478  000F42  6E09               	movwf	_command,c
   479                           
   480                           ;AN1004.c: 249: PORTAbits.RA3 = 1;
   481  000F44  8680               	bsf	3968,3,c	;volatile
   482                           
   483                           ;AN1004.c: 250: SendCommand();
   484  000F46  ECDB  F007         	call	_SendCommand	;wreg free
   485                           
   486                           ;AN1004.c: 251: bytein();
   487  000F4A  ECB4  F007         	call	_bytein	;wreg free
   488                           
   489                           ;AN1004.c: 252: PORTAbits.RA3 = 0;
   490  000F4E  9680               	bcf	3968,3,c	;volatile
   491                           
   492                           ;AN1004.c: 254: return buffer;
   493  000F50  5006               	movf	_buffer,w,c
   494  000F52  0012               	return		;funcret
   495  000F54                     __end_of_ReadX8:
   496                           	opt stack 0
   497                           status	equ	0xFD8
   498                           
   499 ;; *************** function _bytein *****************
   500 ;; Defined at:
   501 ;;		line 375 in file "AN1004.c"
   502 ;; Parameters:    Size  Location     Type
   503 ;;		None
   504 ;; Auto vars:     Size  Location     Type
   505 ;;  i               1    0[COMRAM] unsigned char 
   506 ;; Return value:  Size  Location     Type
   507 ;;                  1    wreg      void 
   508 ;; Registers used:
   509 ;;		wreg, status,2, status,0, cstack
   510 ;; Tracked objects:
   511 ;;		On entry : 0/0
   512 ;;		On exit  : 0/0
   513 ;;		Unchanged: 0/0
   514 ;; Data sizes:     COMRAM   BANK0
   515 ;;      Params:         0       0
   516 ;;      Locals:         1       0
   517 ;;      Temps:          0       0
   518 ;;      Totals:         1       0
   519 ;;Total ram usage:        1 bytes
   520 ;; Hardware stack levels used:    1
   521 ;; Hardware stack levels required when called:    1
   522 ;; This function calls:
   523 ;;		_bitin
   524 ;; This function is called by:
   525 ;;		_ReadX8
   526 ;; This function uses a non-reentrant model
   527 ;;
   528                           
   529                           	psect	text6
   530  000F68                     __ptext6:
   531                           	opt stack 0
   532  000F68                     _bytein:
   533                           	opt stack 28
   534                           
   535                           ;AN1004.c: 377: unsigned char i;
   536                           ;AN1004.c: 379: buffer = 0;
   537                           
   538                           ;incstack = 0
   539  000F68  6A06               	clrf	_buffer,c
   540                           
   541                           ;AN1004.c: 380: for (i = 0; i < 8; i++)
   542  000F6A  6A0A               	clrf	bytein@i,c
   543  000F6C                     l793:
   544                           
   545                           ;AN1004.c: 381: {
   546                           ;AN1004.c: 382: buffer = buffer << 1;
   547  000F6C  90D8               	bcf	status,0,c
   548  000F6E  3606               	rlcf	_buffer,f,c
   549                           
   550                           ;AN1004.c: 383: bitin();
   551  000F70  EC6C  F007         	call	_bitin	;wreg free
   552  000F74  2A0A               	incf	bytein@i,f,c
   553  000F76  0E07               	movlw	7
   554  000F78  640A               	cpfsgt	bytein@i,c
   555  000F7A  D7F8               	goto	l793
   556  000F7C  0C07               	retlw	7
   557  000F7E                     __end_of_bytein:
   558                           	opt stack 0
   559                           status	equ	0xFD8
   560                           
   561 ;; *************** function _bitin *****************
   562 ;; Defined at:
   563 ;;		line 340 in file "AN1004.c"
   564 ;; Parameters:    Size  Location     Type
   565 ;;		None
   566 ;; Auto vars:     Size  Location     Type
   567 ;;		None
   568 ;; Return value:  Size  Location     Type
   569 ;;                  1    wreg      void 
   570 ;; Registers used:
   571 ;;		status,2, status,0
   572 ;; Tracked objects:
   573 ;;		On entry : 0/0
   574 ;;		On exit  : 0/0
   575 ;;		Unchanged: 0/0
   576 ;; Data sizes:     COMRAM   BANK0
   577 ;;      Params:         0       0
   578 ;;      Locals:         0       0
   579 ;;      Temps:          0       0
   580 ;;      Totals:         0       0
   581 ;;Total ram usage:        0 bytes
   582 ;; Hardware stack levels used:    1
   583 ;; This function calls:
   584 ;;		Nothing
   585 ;; This function is called by:
   586 ;;		_bytein
   587 ;; This function uses a non-reentrant model
   588 ;;
   589                           
   590                           	psect	text7
   591  000ED8                     __ptext7:
   592                           	opt stack 0
   593  000ED8                     _bitin:
   594                           	opt stack 28
   595                           
   596                           ;AN1004.c: 342: buffer &= 0xFE;
   597                           
   598                           ;incstack = 0
   599  000ED8  9006               	bcf	_buffer,0,c
   600                           
   601                           ;AN1004.c: 343: PORTBbits.RB0 = 1;
   602  000EDA  8081               	bsf	3969,0,c	;volatile
   603                           
   604                           ;AN1004.c: 344: __nop();
   605  000EDC  F000               	nop	
   606                           
   607                           ;AN1004.c: 345: PORTBbits.RB0 = 0;
   608  000EDE  9081               	bcf	3969,0,c	;volatile
   609                           
   610                           ;AN1004.c: 346: if (PORTBbits.RB4 == 1)
   611  000EE0  B881               	btfsc	3969,4,c	;volatile
   612                           
   613                           ;AN1004.c: 347: {
   614                           ;AN1004.c: 348: buffer |= 0x01;
   615  000EE2  8006               	bsf	_buffer,0,c
   616  000EE4  0012               	return		;funcret
   617  000EE6                     __end_of_bitin:
   618                           	opt stack 0
   619                           status	equ	0xFD8
   620                           
   621 ;; *************** function _Ewen *****************
   622 ;; Defined at:
   623 ;;		line 190 in file "AN1004.c"
   624 ;; Parameters:    Size  Location     Type
   625 ;;		None
   626 ;; Auto vars:     Size  Location     Type
   627 ;;		None
   628 ;; Return value:  Size  Location     Type
   629 ;;                  1    wreg      void 
   630 ;; Registers used:
   631 ;;		wreg, status,2, status,0, cstack
   632 ;; Tracked objects:
   633 ;;		On entry : 0/0
   634 ;;		On exit  : 0/0
   635 ;;		Unchanged: 0/0
   636 ;; Data sizes:     COMRAM   BANK0
   637 ;;      Params:         0       0
   638 ;;      Locals:         0       0
   639 ;;      Temps:          0       0
   640 ;;      Totals:         0       0
   641 ;;Total ram usage:        0 bytes
   642 ;; Hardware stack levels used:    1
   643 ;; Hardware stack levels required when called:    2
   644 ;; This function calls:
   645 ;;		_SendCommand
   646 ;; This function is called by:
   647 ;;		_main
   648 ;; This function uses a non-reentrant model
   649 ;;
   650                           
   651                           	psect	text8
   652  000F0A                     __ptext8:
   653                           	opt stack 0
   654  000F0A                     _Ewen:
   655                           	opt stack 28
   656                           
   657                           ;AN1004.c: 192: command = 0b10011000;
   658                           
   659                           ;incstack = 0
   660  000F0A  0E98               	movlw	152
   661  000F0C  6E09               	movwf	_command,c
   662                           
   663                           ;AN1004.c: 193: address = 0;
   664  000F0E  6A03               	clrf	_address,c
   665  000F10  6A04               	clrf	_address+1,c
   666                           
   667                           ;AN1004.c: 194: PORTAbits.RA3 = 1;
   668  000F12  8680               	bsf	3968,3,c	;volatile
   669                           
   670                           ;AN1004.c: 195: SendCommand();
   671  000F14  ECDB  F007         	call	_SendCommand	;wreg free
   672                           
   673                           ;AN1004.c: 196: PORTAbits.RA3 = 0;
   674  000F18  9680               	bcf	3968,3,c	;volatile
   675  000F1A  0012               	return		;funcret
   676  000F1C                     __end_of_Ewen:
   677                           	opt stack 0
   678                           status	equ	0xFD8
   679                           
   680 ;; *************** function _Ewds *****************
   681 ;; Defined at:
   682 ;;		line 288 in file "AN1004.c"
   683 ;; Parameters:    Size  Location     Type
   684 ;;		None
   685 ;; Auto vars:     Size  Location     Type
   686 ;;		None
   687 ;; Return value:  Size  Location     Type
   688 ;;                  1    wreg      void 
   689 ;; Registers used:
   690 ;;		wreg, status,2, status,0, cstack
   691 ;; Tracked objects:
   692 ;;		On entry : 0/0
   693 ;;		On exit  : 0/0
   694 ;;		Unchanged: 0/0
   695 ;; Data sizes:     COMRAM   BANK0
   696 ;;      Params:         0       0
   697 ;;      Locals:         0       0
   698 ;;      Temps:          0       0
   699 ;;      Totals:         0       0
   700 ;;Total ram usage:        0 bytes
   701 ;; Hardware stack levels used:    1
   702 ;; Hardware stack levels required when called:    2
   703 ;; This function calls:
   704 ;;		_SendCommand
   705 ;; This function is called by:
   706 ;;		_main
   707 ;; This function uses a non-reentrant model
   708 ;;
   709                           
   710                           	psect	text9
   711  000EF8                     __ptext9:
   712                           	opt stack 0
   713  000EF8                     _Ewds:
   714                           	opt stack 28
   715                           
   716                           ;AN1004.c: 290: command = 0b10000000;
   717                           
   718                           ;incstack = 0
   719  000EF8  0E80               	movlw	128
   720  000EFA  6E09               	movwf	_command,c
   721                           
   722                           ;AN1004.c: 291: address = 0;
   723  000EFC  6A03               	clrf	_address,c
   724  000EFE  6A04               	clrf	_address+1,c
   725                           
   726                           ;AN1004.c: 292: PORTAbits.RA3 = 1;
   727  000F00  8680               	bsf	3968,3,c	;volatile
   728                           
   729                           ;AN1004.c: 293: SendCommand();
   730  000F02  ECDB  F007         	call	_SendCommand	;wreg free
   731                           
   732                           ;AN1004.c: 294: PORTAbits.RA3 = 0;
   733  000F06  9680               	bcf	3968,3,c	;volatile
   734  000F08  0012               	return		;funcret
   735  000F0A                     __end_of_Ewds:
   736                           	opt stack 0
   737                           status	equ	0xFD8
   738                           
   739 ;; *************** function _SendCommand *****************
   740 ;; Defined at:
   741 ;;		line 395 in file "AN1004.c"
   742 ;; Parameters:    Size  Location     Type
   743 ;;		None
   744 ;; Auto vars:     Size  Location     Type
   745 ;;		None
   746 ;; Return value:  Size  Location     Type
   747 ;;                  1    wreg      void 
   748 ;; Registers used:
   749 ;;		wreg, status,2, status,0, cstack
   750 ;; Tracked objects:
   751 ;;		On entry : 0/0
   752 ;;		On exit  : 0/0
   753 ;;		Unchanged: 0/0
   754 ;; Data sizes:     COMRAM   BANK0
   755 ;;      Params:         0       0
   756 ;;      Locals:         0       0
   757 ;;      Temps:          2       0
   758 ;;      Totals:         2       0
   759 ;;Total ram usage:        2 bytes
   760 ;; Hardware stack levels used:    1
   761 ;; Hardware stack levels required when called:    1
   762 ;; This function calls:
   763 ;;		_bitout
   764 ;; This function is called by:
   765 ;;		_Ewen
   766 ;;		_WriteX8
   767 ;;		_ReadX8
   768 ;;		_Ewds
   769 ;; This function uses a non-reentrant model
   770 ;;
   771                           
   772                           	psect	text10
   773  000FB6                     __ptext10:
   774                           	opt stack 0
   775  000FB6                     _SendCommand:
   776                           	opt stack 28
   777                           
   778                           ;AN1004.c: 397: static unsigned char i;
   779                           ;AN1004.c: 398: static unsigned int cmd_addr;
   780                           ;AN1004.c: 399: static unsigned int temp;
   781                           ;AN1004.c: 401: cmd_addr = address;
   782                           
   783                           ;incstack = 0
   784  000FB6  C003  F007         	movff	_address,SendCommand@cmd_addr
   785  000FBA  C004  F008         	movff	_address+1,SendCommand@cmd_addr+1
   786                           
   787                           ;AN1004.c: 403: for (i = 0; i < (16-12); i++)
   788  000FBE  6A05               	clrf	SendCommand@i,c
   789  000FC0                     l751:
   790                           
   791                           ;AN1004.c: 404: {
   792                           ;AN1004.c: 405: cmd_addr = cmd_addr << 1;
   793  000FC0  90D8               	bcf	status,0,c
   794  000FC2  3607               	rlcf	SendCommand@cmd_addr,f,c
   795  000FC4  3608               	rlcf	SendCommand@cmd_addr+1,f,c
   796  000FC6  2A05               	incf	SendCommand@i,f,c
   797  000FC8  0E03               	movlw	3
   798  000FCA  6405               	cpfsgt	SendCommand@i,c
   799  000FCC  D7F9               	goto	l751
   800                           
   801                           ;AN1004.c: 406: }
   802                           ;AN1004.c: 409: cmd_addr &= 0x1FFF;
   803  000FCE  0E1F               	movlw	31
   804  000FD0  1608               	andwf	SendCommand@cmd_addr+1,f,c
   805                           
   806                           ;AN1004.c: 410: temp = command;
   807  000FD2  C009  F001         	movff	_command,SendCommand@temp
   808  000FD6  6A02               	clrf	SendCommand@temp+1,c
   809                           
   810                           ;AN1004.c: 411: cmd_addr |= (temp<<8);
   811  000FD8  5001               	movf	SendCommand@temp,w,c
   812  000FDA  6E0B               	movwf	(??_SendCommand+1)& (0+255),c
   813  000FDC  6A0A               	clrf	??_SendCommand& (0+255),c
   814  000FDE  500A               	movf	??_SendCommand,w,c
   815  000FE0  1207               	iorwf	SendCommand@cmd_addr,f,c
   816  000FE2  500B               	movf	??_SendCommand+1,w,c
   817  000FE4  1208               	iorwf	SendCommand@cmd_addr+1,f,c
   818                           
   819                           ;AN1004.c: 414: for (i = 0; i < 12; i++)
   820  000FE6  6A05               	clrf	SendCommand@i,c
   821  000FE8                     l105:
   822                           
   823                           ;AN1004.c: 415: {
   824                           ;AN1004.c: 416: buffer = (char)(cmd_addr >> 8);
   825  000FE8  C008  F006         	movff	SendCommand@cmd_addr+1,_buffer
   826                           
   827                           ;AN1004.c: 417: bitout();
   828  000FEC  EC73  F007         	call	_bitout	;wreg free
   829                           
   830                           ;AN1004.c: 418: cmd_addr = cmd_addr << 1;
   831  000FF0  90D8               	bcf	status,0,c
   832  000FF2  3607               	rlcf	SendCommand@cmd_addr,f,c
   833  000FF4  3608               	rlcf	SendCommand@cmd_addr+1,f,c
   834  000FF6  2A05               	incf	SendCommand@i,f,c
   835  000FF8  0E0B               	movlw	11
   836  000FFA  6405               	cpfsgt	SendCommand@i,c
   837  000FFC  D7F5               	goto	l105
   838  000FFE  0C0B               	retlw	11
   839  001000                     __end_of_SendCommand:
   840                           	opt stack 0
   841                           status	equ	0xFD8
   842                           
   843 ;; *************** function _bitout *****************
   844 ;; Defined at:
   845 ;;		line 319 in file "AN1004.c"
   846 ;; Parameters:    Size  Location     Type
   847 ;;		None
   848 ;; Auto vars:     Size  Location     Type
   849 ;;		None
   850 ;; Return value:  Size  Location     Type
   851 ;;                  1    wreg      void 
   852 ;; Registers used:
   853 ;;		None
   854 ;; Tracked objects:
   855 ;;		On entry : 0/0
   856 ;;		On exit  : 0/0
   857 ;;		Unchanged: 0/0
   858 ;; Data sizes:     COMRAM   BANK0
   859 ;;      Params:         0       0
   860 ;;      Locals:         0       0
   861 ;;      Temps:          0       0
   862 ;;      Totals:         0       0
   863 ;;Total ram usage:        0 bytes
   864 ;; Hardware stack levels used:    1
   865 ;; This function calls:
   866 ;;		Nothing
   867 ;; This function is called by:
   868 ;;		_byteout
   869 ;;		_SendCommand
   870 ;; This function uses a non-reentrant model
   871 ;;
   872                           
   873                           	psect	text11
   874  000EE6                     __ptext11:
   875                           	opt stack 0
   876  000EE6                     _bitout:
   877                           	opt stack 28
   878                           
   879                           ;AN1004.c: 321: if (buffer & 0x80)
   880                           
   881                           ;incstack = 0
   882  000EE6  AE06               	btfss	_buffer,7,c
   883  000EE8  D002               	goto	l78
   884                           
   885                           ;AN1004.c: 322: {
   886                           ;AN1004.c: 323: PORTBbits.RB1 = 1;
   887  000EEA  8281               	bsf	3969,1,c	;volatile
   888                           
   889                           ;AN1004.c: 324: }
   890  000EEC  D001               	goto	l79
   891  000EEE                     l78:
   892                           
   893                           ;AN1004.c: 325: else
   894                           ;AN1004.c: 326: {
   895                           ;AN1004.c: 327: PORTBbits.RB1 = 0;
   896  000EEE  9281               	bcf	3969,1,c	;volatile
   897  000EF0                     l79:
   898                           
   899                           ;AN1004.c: 328: }
   900                           ;AN1004.c: 329: PORTBbits.RB0 = 1;
   901  000EF0  8081               	bsf	3969,0,c	;volatile
   902                           
   903                           ;AN1004.c: 330: __nop();
   904  000EF2  F000               	nop	
   905                           
   906                           ;AN1004.c: 331: PORTBbits.RB0 = 0;
   907  000EF4  9081               	bcf	3969,0,c	;volatile
   908  000EF6  0012               	return		;funcret
   909  000EF8                     __end_of_bitout:
   910                           	opt stack 0
   911  0000                     status	equ	0xFD8
   912                           status	equ	0xFD8
   913                           
   914                           	psect	rparam
   915  0000                     status	equ	0xFD8


Data Sizes:
    Strings     0
    Constant    0
    Data        0
    BSS         6
    Persistent  3
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM          127      5      14
    BANK0           128      0       0

Pointer List with Targets:

    None.

Critical Paths under _main in COMRAM

    _main->_WriteX8
    _WriteX8->_SendCommand
    _ReadX8->_SendCommand
    _Ewen->_SendCommand
    _Ewds->_SendCommand

Critical Paths under _main in BANK0

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 2     2      0      90
                                              3 COMRAM     2     2      0
                               _Ewds
                               _Ewen
                             _ReadX8
                            _WriteX8
                               _init
 ---------------------------------------------------------------------------------
 (1) _init                                                 0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _WriteX8                                              1     1      0      45
                                              2 COMRAM     1     1      0
                        _SendCommand
                            _byteout
                               _poll
 ---------------------------------------------------------------------------------
 (2) _poll                                                 0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _byteout                                              1     1      0      30
                                              0 COMRAM     1     1      0
                             _bitout
 ---------------------------------------------------------------------------------
 (1) _ReadX8                                               0     0      0      30
                        _SendCommand
                             _bytein
 ---------------------------------------------------------------------------------
 (2) _bytein                                               1     1      0      30
                                              0 COMRAM     1     1      0
                              _bitin
 ---------------------------------------------------------------------------------
 (3) _bitin                                                0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _Ewen                                                 0     0      0       0
                        _SendCommand
 ---------------------------------------------------------------------------------
 (1) _Ewds                                                 0     0      0       0
                        _SendCommand
 ---------------------------------------------------------------------------------
 (2) _SendCommand                                          2     2      0       0
                                              0 COMRAM     2     2      0
                             _bitout
 ---------------------------------------------------------------------------------
 (3) _bitout                                               0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 3
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _Ewds
     _SendCommand
       _bitout
   _Ewen
     _SendCommand
       _bitout
   _ReadX8
     _SendCommand
       _bitout
     _bytein
       _bitin
   _WriteX8
     _SendCommand
       _bitout
     _byteout
       _bitout
     _poll
   _init

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
EEDATA             100      0       0       0        0.0%
BIGRAM              FF      0       0       6        0.0%
BITBANK0            80      0       0       3        0.0%
BANK0               80      0       0       4        0.0%
BITCOMRAM           7F      0       0       0        0.0%
COMRAM              7F      5       E       1       11.0%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0       E       5        0.0%
DATA                 0      0       E       7        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V1.43 build -156212558 
Symbol Table                                                                                   Thu Sep 28 11:24:42 2017

                     l45 0FB4                       l72 0ED0                       l78 0EEE  
                     l79 0EF0             __CFG_CP0$OFF 000000             __CFG_CP1$OFF 000000  
            __CFG_OSC$HS 000000                      l105 0FE8                      l751 0FC0  
                    l793 0F6C                      l777 0F56             __CFG_CPB$OFF 000000  
           __CFG_CPD$OFF 000000             __CFG_BOR$OFF 000000             __CFG_LVP$OFF 000000  
           __CFG_WDT$OFF 000000                     _Ewen 0F0A                     _Ewds 0EF8  
           __CFG_STVR$ON 000000                     _main 0F98                     _init 0F1C  
                   _poll 0ECC                     start 0002            __CFG_FSCM$OFF 000000  
          __CFG_IESO$OFF 000000            __CFG_MCLRE$ON 000000             ___param_bank 000000  
                  ?_Ewen 000A                    ?_Ewds 000A                    ?_main 000A  
                  ?_init 000A                    ?_poll 000A          __end_of_WriteX8 0F98  
                  _PORTA 000F80                    _PORTB 000F81                    _TRISA 000F92  
                  _TRISB 000F93            __CFG_PWRT$OFF 000000            __CFG_WRT0$OFF 000000  
          __CFG_WRT1$OFF 000000           __CFG_EBTR0$OFF 000000           __CFG_EBTR1$OFF 000000  
          __CFG_WRTB$OFF 000000            __CFG_WRTC$OFF 000000            __CFG_WRTD$OFF 000000  
         __CFG_EBTRB$OFF 000000                    _bitin 0ED8          __end_of_byteout 0F68  
                  status 000FD8          __initialization 0F2E             __end_of_Ewen 0F1C  
           __end_of_Ewds 0F0A            ??_SendCommand 000A             __end_of_main 0FB6  
           __end_of_init 0F2E             __end_of_poll 0ED8                   ??_Ewen 000C  
                 ??_Ewds 000C                   ??_main 000D                   ??_init 000A  
                 ??_poll 000A            __activetblptr 000000                   ?_bitin 000A  
                 _ADCON1 000FC1                   _ReadX8 0F40                ??_WriteX8 000C  
                 _bitout 0EE6                   _buffer 0006                   _bytein 0F68  
    __end_of_SendCommand 1000                ??_byteout 000A               __accesstop 0080  
__end_of__initialization 0F3A            ___rparam_used 000001           __pcstackCOMRAM 000A  
          __end_of_bitin 0EE6                  ??_bitin 000A               __pnvCOMRAM 0007  
                ?_ReadX8 000A              _SendCommand 0FB6                  ?_bitout 000A  
                ?_bytein 000A                  __Hparam 0000          __size_of_ReadX8 0014  
                __Lparam 0000                  _WriteX8 0F7E                  _address 0003  
        __size_of_bitout 0012                  __pcinit 0F2E          __size_of_bytein 0016  
                __ramtop 0100                  __ptext0 0F98                  __ptext1 0F1C  
                __ptext2 0F7E                  __ptext3 0ECC                  __ptext4 0F54  
                __ptext5 0F40                  __ptext6 0F68                  __ptext7 0ED8  
                __ptext8 0F0A                  __ptext9 0EF8                  _command 0009  
                _byteout 0F54     end_of_initialization 0F3A                  bytein@i 000A  
              _PORTAbits 000F80                _PORTBbits 000F81             SendCommand@i 0005  
         __end_of_ReadX8 0F54           __end_of_bitout 0EF8           __end_of_bytein 0F7E  
    start_initialization 0F2E                 ??_ReadX8 000C             ?_SendCommand 000A  
               ??_bitout 000A                 ??_bytein 000A              __pbssCOMRAM 0001  
            WriteX8@data 000C                 ?_WriteX8 000A                 ?_byteout 000A  
         __size_of_bitin 000E                 __Hrparam 0000                 __Lrparam 0000  
       __size_of_WriteX8 001A     __size_of_SendCommand 004A         __size_of_byteout 0014  
               __ptext10 0FB6                 __ptext11 0EE6            __size_of_Ewen 0012  
          __size_of_Ewds 0012            __size_of_main 001E            __size_of_init 0012  
          __size_of_poll 000C      SendCommand@cmd_addr 0007                 byteout@i 000A  
        SendCommand@temp 0001  
